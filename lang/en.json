{"BABONUS": {
  "AvailableFiltersTooltip": "The list of filters you can apply to this bonus, further narrowing down which rolls it should apply to. Each filter must be true for the bonus to apply.",
  "Babonus": "Babonus",
  "TestBabonus": "Ability Check Babonus",
  "AttackBabonus": "Attack Roll Babonus",
  "DamageBabonus": "Damage Roll Babonus",
  "HitdieBabonus": "Hit Die Babonus",
  "SaveBabonus": "Save DC Babonus",
  "ThrowBabonus": "Saving Throw Babonus",
  "BasicBonuses": "Basic Bonuses",
  "BonusCopy": "{name} (Copy)",
  "ConfigurationConsumptionConsume": "Consume:",
  "ConfigurationCopyTooltip": "Create a duplicate of this bonus",
  "ConfigurationEditTooltip": "Edit this bonus",
  "ConsumptionOption": "({value}) of {max} {label}",
  "ContextMenu": {
    "Delete": "Delete",
    "Disable": "Disable",
    "Duplicate": "Duplicate",
    "Edit": "Edit",
    "Enable": "Enable"
  },
  "Create": "Create New Bonus",
  "CurrentBonuses": "Current Bonuses",
  "CurrentBonusesTooltip": "The bonuses you have created that are currently stored on this Actor, Item, or ActiveEffect.",
  "CurrentFiltersTooltip": "The filters currently applied to the bonus, further narrowing down which rolls it should apply to. Each filter must be true for the bonus to apply.",
  "Example": "Example",
  "Fields": {
    "Aura": {
      "Blockers": {
        "Hint": "The status conditions that block an aura from being transferred, such as a paladin's aura that is only active while the paladin is neither dead nor unconscious.",
        "Label": "Blocking Conditions"
      },
      "Disposition": {
        "Hint": "Which targets should be affected by this aura, relative to the disposition of the origin token.",
        "Label": "Valid Targets",
        "OptionAlly": "Allied Targets",
        "OptionAny": "Any Targets",
        "OptionEnemy": "Enemy Targets"
      },
      "Enabled": {
        "Hint": "Configure whether and how the bonus acts as an aura.",
        "Label": "Enable"
      },
      "Label": "Aura Configuration",
      "Range": {
        "Hint": "The range of the aura, measured in feet (put in '-1' for an unlimited range).",
        "Label": "Range",
        "LabelFt": "Range ({range} ft)",
        "LabelUnlimited": "Range ({range})"
      },
      "RequireLight": {
        "Hint": "If checked, the aura will be restricted by anything that blocks light.",
        "Label": "Enforce Light Restrictions"
      },
      "RequireMove": {
        "Hint": "If checked, the aura will be restricted by anything that blocks movement.",
        "Label": "Enforce Move Restrictions"
      },
      "RequireSight": {
        "Hint": "If checked, the aura will be restricted by anything that blocks vision.",
        "Label": "Enforce Sight Restrictions"
      },
      "RequireSound": {
        "Hint": "If checked, the aura will be restricted by anything that blocks sound.",
        "Label": "Enforce Sound Restrictions"
      },
      "Self": {
        "Hint": "Whether the aura should affect its owner regardless of any other targeting behavior.",
        "Label": "Affect Self"
      },
      "Template": {
        "Hint": "If the aura affects the area within a Measured Template instead of having a range (for items that are able to place a template).",
        "Label": "Applies to Template"
      }
    },
    "Consume": {
      "Enabled": {
        "Hint": "Configure whether and how the bonus consumes a property. A bonus cannot be set to consume unless it is optional.",
        "Label": "Enable"
      },
      "Formula": {
        "Hint": "The formula by which the bonus scales at each step.",
        "Label": "Scaling Formula"
      },
      "Label": "Consumption Configuration",
      "Scales": {
        "Hint": "Decide whether this bonus can consume more than the base amount of the consumed property and scale its bonus accordingly.",
        "Label": "Enable Scaling"
      },
      "Subtype": {
        "CurrencyLabel": "Denomination",
        "HitdiceLabel": "Hit Die Size"
      },
      "Type": {
        "Label": "Consumption Type",
        "OptionEffect": "Active Effect",
        "OptionSlots": "Spell Slot"
      },
      "Values": {
        "Hint": "The amount that will be consumed when opting into this bonus.",
        "HintScale": "The minimum and maximum amounts that can be consumed when opting into this bonus.",
        "HintScaleSlot": "The minimum and maximum sizes of a spell slot to opt into this bonus. If a spell slot greater than this maximum is consumed, it grants no additional benefit.",
        "HintSlot": "The minimum size of a spell slot required to opt into this bonus.",
        "Label": "Consumed Values",
        "LabelSlot": "Spell Slot Size",
        "Max": "Maximum",
        "MaxSlot": "Largest",
        "Min": "Minimum",
        "MinSlot": "Smallest"
      },
      "ValueStep": {
        "Hint": "The delta, or step, of the choices when consuming.",
        "Label": "Step"
      }
    },
    "Description": {
      "Hint": "The text that accompanies this bonus. While not required, this is shown in tooltips as well as any hints for optional bonuses.",
      "Label": "Description"
    },
    "Enabled": {
      "Hint": "Toggle this bonus on or off. A bonus that is toggled off will be completely ignored.",
      "Label": "Enabled"
    },
    "Exclusive": {
      "Hint": "Toggle whether this bonus applies only to the item on which it is created. A bonus cannot be set to apply to one specific item only, unless created on said item, and applying to attack, damage, save DCs, or tool checks.",
      "Label": "Exclusive"
    },
    "Img": {
      "Hint": "The image of this bonus to display where relevant.",
      "Label": "Image"
    },
    "Optional": {
      "Hint": "Toggle whether this bonus should be opted into when rolling. A bonus cannot be set to be optional unless it provides an additive bonus on top of an attack roll, damage roll, saving throw, or ability check.",
      "Label": "Optional"
    },
    "Reminder": {
      "Hint": "Toggle whether this bonus simply serves as a reminder. To use this, it must not be granting any bonuses or dice modifications. This feature is also only available for rolls that have a configuration dialog.",
      "Label": "Reminder"
    }
  },
  "Filters": {
    "Abilities": {
      "Hint": "Filter by the ability score being used for the roll. This filter will respect items that are set to use their Default ability score, such as spells set to use the Spellcasting ability, or weapons that are Finesse.",
      "Label": "Ability Modifier"
    },
    "ActorCreatureSizes": {
      "Hint": "Filter by the creature size of the actor, requiring that the actor making the roll is one of the chosen creature sizes.",
      "Label": "Creature Sizes"
    },
    "ActorCreatureTypes": {
      "Hint": "Filter by the type of creature the rolling actor must be one of (or have as a subtype), or the type of creature the rolling actor must not be one of. For example 'undead', 'fey', or 'construct'. To designate a creature type as a subtype, write as many as you like in the actor's Subtype field, separated by a '/'.",
      "Label": "Actor Creature Types"
    },
    "ActorLanguages": {
      "Hint": "Filter by the languages the actor can or cannot speak, read, or write. This will take into account if an actor can speak an entire group of languages such as Primordial rather than only the specific dialects.",
      "Label": "Spoken Languages"
    },
    "ArbitraryComparisons": {
      "Hint": "Insert numbers, roll data properties, strings, or a combination of the three, that must be in a specific relationship for the bonus to apply. This comparison can evaluate substrings by using either of the inequalities. You can also use roll data from a targeted token's actor by prepending with '@target'.",
      "Label": "Arbitrary Comparisons",
      "One": "Value…",
      "Other": "Other value…"
    },
    "AttackModes": {
      "Hint": "Filter by the type of attack the item is performing, which decides the damage roll. For example, an unarmed strike, a two-handed weapon attack, or ranged spell attack.",
      "Label": "Attack Modes",
      "ValueLabel": "Range",
      "ClassificationLabel": "Type",
      "ModeLabel": "Mode"
    },
    "BaseArmors": {
      "Hint": "Filter by the type of armor the actor must be wearing or must not be wearing (including shields). For example if wanting the bonus to apply only when wearing Chain Mail or while unarmored. This filter can take into account armor categories such as 'Light Armor' as well.",
      "Label": "Armor Types"
    },
    "BaseTools": {
      "Hint": "Filter by the types of tools the item making the roll must be one of or none of. For example if wanting the bonus to apply only when using an Herbalism Kit, Thieves' Tools, or Cobbler's Tools.",
      "Label": "Tool Types"
    },
    "BaseWeapons": {
      "Hint": "Filter by the types of weapons the item making the roll must be one of or none of. For example if wanting the bonus to apply only when using a Battleaxe, Shortbow, or Longsword. This filter can take categories into account as well.",
      "Label": "Weapon Types"
    },
    "CreatureTypes": {
      "Hint": "Filter by the type of creature the targeted actor must be one of (or have as a subtype), or the type of creature the targeted actor must not be one of. For example 'undead', 'fey', or 'construct'. To designate a creature type as a subtype, write as many as you like in the actor's Subtype field, separated by a '/'.",
      "Label": "Target Creature Types"
    },
    "CustomScripts": {
      "Hint": "Filter using any custom script you want to write yourself. The script has to be completely synchronous and must explicitly return true or false. As helper variables, the script is supplied with the actor and token of the one performing the roll ('actor' and 'token'), the item being used ('item', if any), and the bonus on which this script is attached ('bonus'). These variables can be accessed directly.",
      "Label": "Custom Script"
    },
    "DamageTypes": {
      "Hint": "Filter by the type of damage that must be or must not be part of the roll. For example if a spell must be dealing fire or lightning damage.",
      "Label": "Damage Types"
    },
    "FeatureTypes": {
      "Hint": "Filter by the type and subtype a feature-type item must be. For example a class feature, ki feature, or monster feature.",
      "Label": "Feature Types",
      "SubtypeLabel": "Subtype",
      "TypeLabel": "Type"
    },
    "HealthPercentages": {
      "Hint": "Filter by the percentage of health the actor must at least have, or at most have. For example if the actor performing the roll must be at or above 90% health remaining.",
      "Label": "Health Percentage",
      "OptionLess": "Less Than",
      "OptionMore": "More Than",
      "TypeLabel": "Type",
      "ValueLabel": "Threshold"
    },
    "Identifiers": {
      "Hint": "Filter by the identifiers that an item must have one of for the bonus to apply. You can set an item's identifier in its source config.",
      "Label": "Identifiers",
      "Placeholder": "Enter identifiers"
    },
    "ItemTypes": {
      "Hint": "Filter by the type of the item being used to perform the roll. For example if the bonus should only apply to spells or only to weapons.",
      "Label": "Item Types"
    },
    "PreparationModes": {
      "Hint": "Filter by the type of preparation mode a spell must be set to for the bonus to apply. For example when using a spell that is prepared as Pact Magic or Ritual Spellcasting.",
      "Label": "Preparation Modes"
    },
    "ProficiencyLevels": {
      "Hint": "Filter by the level of proficiency of the roll. For example, if the bonus should only apply if the tool being used is rolled with expertise, or if a saving throw is non-proficient.",
      "Label": "Proficiency Levels"
    },
    "RemainingSpellSlots": {
      "Hint": "Filter by the minimum and maximum total number of spell slots the actor performing the roll must have remaining for the bonus to apply. For example if you want a bonus to apply only if you have 3 spell slots or more remaining, or no spell slots remaining at all. This can be toggled such that each remaining spell slot has a value equal to its size.",
      "Label": "Remaining Spell Slots",
      "RangesLabel": "Range",
      "SizeHint": "Take the size of the spell slot into account, meaning a spell slot of 5th level counts as a value of five. Otherwise, each spell slots count as one.",
      "SizeLabel": "Size"
    },
    "SaveAbilities": {
      "Hint": "Filter by the ability score that must be used to set the saving throw DC of the item for the bonus to apply; for example a Battle Master fighter who determines their Maneuver DC with Dexterity. This can be different from the ability the item otherwise uses. If an item is set to scale with 'Spellcasting', the spellcasting ability of the actor performing the roll is used to compared.",
      "Label": "Save DC Abilities"
    },
    "SkillIds": {
      "Hint": "Filter by the types of skills the roll being performed must be one of or none of. For example if the bonus should apply only to skill checks made with Athletics, Nature, or Survival.",
      "Label": "Skills"
    },
    "SourceClasses": {
      "Hint": "Filter by the identifiers of the classes that a spell should belong to. A source class identifier can be set in the spell on the Details tab.",
      "Label": "Source Classes",
      "Placeholder": "Enter identifiers"
    },
    "SpellComponents": {
      "Hint": "Filter by the components or tags the spell being cast must have. You can choose whether the spell must have all of the given components or tags, or at least one of them. For example if you want a bonus to apply to all spells that require concentration or all spells with a material component.",
      "Label": "Spell Components",
      "MatchAll": "Match all",
      "MatchAny": "Match any",
      "MatchLabel": "Matching",
      "TypesLabel": "Types"
    },
    "SpellLevels": {
      "Hint": "Filter by the level at which the spell must be cast. For example, you can have a bonus apply only to cantrips, only to leveled spells, or only to spells of 3rd level or below.",
      "Label": "Spell Levels"
    },
    "SpellSchools": {
      "Hint": "Filter by the school a spell must belong to. If multiple schools are selected, the spell must belong to any one of them. For example, if you want a bonus to apply only to Divination or Evocation spells.",
      "Label": "Spell Schools"
    },
    "StatusEffects": {
      "Hint": "Filter by the conditions the actor performing the roll must be affected by or must not be affected by. This will take into account any condition immunities the actor has, such as immunity to being paralyzed.",
      "Label": "Actor Conditions"
    },
    "TargetArmors": {
      "Hint": "Filter by the type of armor the target must be wearing or must not be wearing (including shields). For example if wanting the bonus to apply only when the target is wearing Chain Mail or is unarmored. This filter can take into account armor categories such as 'Light Armor' as well.",
      "Label": "Target Armor"
    },
    "TargetEffects": {
      "Hint": "Filter by the conditions the targeted actor must be affected by or must not be affected by. This will take into account any condition immunities the actor has, such as immunity to being paralyzed.",
      "Label": "Target Conditions"
    },
    "ThrowTypes": {
      "Hint": "Filter by the type of saving throw the bonus should apply to. For example if the bonus should apply only to Intelligence or Charisma saving throws, or even to Death saving throws or saving throws to maintain concentration on an effect.",
      "Label": "Saving Throw Types"
    },
    "TokenSizes": {
      "Hint": "Filter by the size of a targeted token, and whether to compare against the rolling token as well. For example if it should be required that a targeted token is at least 2-by-2 but also larger than the token of the actor performing the roll.",
      "Label": "Token Sizes",
      "RangeLabel": "Size",
      "SelfHint": "If checked, the target token must be larger/smaller than the rolling actor's token size in addition to the above value.",
      "SelfLabel": "Compare to self",
      "SizeGreaterThan": "Greater than",
      "SizePlaceholder": "Size…",
      "SizeSmallerThan": "Smaller than"
    },
    "WeaponProperties": {
      "Hint": "Filter by the weapon properties that the item being used to perform the roll either must have some of or cannot have any of. For example if the bonus should apply only to Two-Handed weapons or Versatile weapons.",
      "Label": "Weapon Properties"
    }
  },
  "ID": "ID",
  "Keys": "Keys",
  "KeysDialogApplySelection": "Apply Selection",
  "KeysDialogExclude": "Exclude",
  "KeysDialogInclude": "Include",
  "KeysDialogState": "State",
  "KeysDialogTitle": "Keys: {name}",
  "KeysDialogValue": "Value",
  "Labels": {
    "Consuming": "Consuming",
    "Disabled": "Disabled",
    "Exclusive": "Item Exclusive",
    "Filters": "{n} Filters",
    "Optional": "Optional",
    "Reminder": "Reminder",
    "TemplateAura": "Template Aura",
    "TokenAura": "Token Aura"
  },
  "Largest": "Largest",
  "Modifiers": {
    "Amount": {
      "EnabledHint": "Allow this bonus to make changes to the amount of dice rolled.",
      "EnabledLabel": "Quantity Modification",
      "Label": "Dice Quantity",
      "ModeHint": "Whether to add the additional dice on top or multiply the value by this amount.",
      "ModeLabel": "Mode",
      "ValueHint": "The increase to the amount of dice rolled.",
      "ValueLabel": "Additional Dice"
    },
    "Config": {
      "FirstHint": "If checked, the die modifiers only apply to the first die in the full expression.",
      "FirstLabel": "First Die Only",
      "Label": "Dice Configuration",
      "Enabled": "Enabled Modifications",
      "EnabledHint": "Toggle which dice modifications should be configurable and applying to the die rolls."
    },
    "Explode": {
      "EnabledHint": "Allow this bonus to cause the dice to explode.",
      "EnabledLabel": "Exploding Dice",
      "Label": "Exploding Dice",
      "LimitHint": "The maximum amount of explosions allowed. If left blank, there will not be any limit enforced.",
      "LimitLabel": "Maximum Explosions",
      "OnceHint": "Limit the dice to explode at most once.",
      "OnceLabel": "Explode Once",
      "ValueHint": "The threshold for the explosive behaviour.",
      "ValueLabel": "Threshold"
    },
    "Maximum": {
      "EnabledHint": "Allow this bonus to configure the maximum result rolled on each die.",
      "EnabledLabel": "Maximum Results",
      "Label": "Maximum Results",
      "ValueHint": "The maximum result able to be rolled. By using negative values, the ceiling will be calculated from the top rather than the bottom.",
      "ValueLabel": "Maximum Value",
      "ZeroHint": "Allow 0 as a final value. Otherwise the minimum result allowed will be 1.",
      "ZeroLabel": "Allow Zero"
    },
    "Minimum": {
      "EnabledHint": "Allow this bonus to configure the minimum result rolled on each die.",
      "EnabledLabel": "Minimum Results",
      "Label": "Minimum Results",
      "MaximizeHint": "Cause all dice to be maximized.",
      "MaximizeLabel": "Maximize",
      "ValueHint": "The minimum result able to be rolled. By using negative values, the floor will be calculated from the top rather than the bottom.",
      "ValueLabel": "Minimum Value"
    },
    "Modes": {
      "ChoiceAdd": "Add",
      "ChoiceMultiply": "Multiply"
    },
    "Reroll": {
      "EnabledHint": "Allow this bonus to cause the dice to reroll.",
      "EnabledLabel": "Rerolling Behaviour",
      "InvertHint": "Whether to reroll dice that roll above the threshold instead of below the threshold.",
      "InvertLabel": "Inverted",
      "Label": "Rerolling Dice",
      "LimitHint": "The maximum amount of rerolls allowed if recursive. If left blank, there will not be any limit enforced.",
      "LimitLabel": "Maximum Rerolls",
      "RecursiveHint": "Whether to reroll the dice recursively.",
      "RecursiveLabel": "Recursive",
      "ValueHint": "The threshold for the reroll behaviour.",
      "ValueLabel": "Threshold"
    },
    "Size": {
      "EnabledHint": "Allow this bonus to make changes to the size of dice rolled.",
      "EnabledLabel": "Size Modification",
      "Label": "Dice Size",
      "ModeHint": "Whether to increase the dice sizes by the amount or multiply the faces.",
      "ModeLabel": "Mode",
      "ValueHint": "The increase to the size of the dice rolled.",
      "ValueLabel": "Size Increase"
    }
  },
  "ModuleTitle": "Build-a-Bonus",
  "NewBabonus": "New Babonus",
  "OriginName": "Origin: {name}",
  "OverviewActor": "Actor",
  "OverviewCopied": "The uuid has been copied to clipboard.",
  "OverviewImmediateParent": "Immediate Parent",
  "OverviewName": "Name",
  "OverviewTitle": "Applied Bonuses",
  "RegionConfigHint": "Open the builder for bonuses on this scene region. These will apply to any token contained within the region.",
  "Relative": "Relative",
  "SearchBonuses": "Search Bonuses",
  "SelectType": "Select a Type",
  "SelectTypeTooltip": "Select a type for your new bonus; the kind of roll to which it should apply.",
  "SettingsAllowFumbleNegationHint": "Allow for modifiers to the fumble range on attack rolls to go below 1?",
  "SettingsAllowFumbleNegationName": "Allow Fumble Negation",
  "SettingsDisableCustomScriptFilterHint": "Disable the 'Custom Script' filters from having their values read. Instead the filter always immediately returns true. Enable this setting if you prefer other users not executing scripts.",
  "SettingsDisableCustomScriptFilterName": "Disable 'Custom Script' filter.",
  "SettingsDisplayLabelHint": "If checked, the label is displayed in the header of applicable actors, items, and effects.",
  "SettingsDisplayLabelName": "Display Label",
  "SettingsPadAuraRadius": "Pad Aura Radius",
  "SettingsPadAuraRadiusHint": "On gridless scenes, extend the radius of auras due to token size?",
  "SettingsShowAuraRangesHint": "Create a visual indicator for the ranges of babonus auras. This does not apply to template auras or auras with unlimited ranges. If the roller is within an aura, it is marked green, otherwise red.",
  "SettingsShowAuraRangesName": "Show Aura Ranges",
  "SettingsShowBuilderForPlayersHint": "If disabled, the icon to enter the builder will not be available in the header for players.",
  "SettingsShowBuilderForPlayersName": "Show for Players",
  "SettingsShowSheetTab": "Character/NPC Sheet Tab",
  "SettingsShowSheetTabHint": "Add a new tab on the character/npc sheets rather than adding a header button.",
  "SheetTabs": {
    "Advanced": "Advanced",
    "Bonuses": "Bonuses",
    "Configuration": "Configuration",
    "Description": "Description",
    "Filters": "Filters"
  },
  "ToggleBonus": "Toggle Bonus",
  "Toggles": "Toggles",
  "TypeAttack": {
    "BonusHint": "Additional parts to add on top of the attack roll.",
    "BonusLabel": "Attack Roll Bonus",
    "CriticalRangeHint": "An integer to subtract from the critical range of the attack roll. This field respects roll data, but not dice rolls.",
    "CriticalRangeLabel": "Critical Range Modifier",
    "FumbleRangeHint": "An integer to add to the fumble range of the attack roll. This field respects roll data, but not dice rolls.",
    "FumbleRangeLabel": "Fumble Range Modifier",
    "Label": "Attack Rolls"
  },
  "TypeDamage": {
    "BonusHint": "Additional parts to add on top of the damage roll.",
    "BonusLabel": "Damage Roll Bonus",
    "CriticalBonusDamageHint": "Additional parts to add on top of the damage roll on critical hits.",
    "CriticalBonusDamageLabel": "Extra Critical Hit Damage",
    "CriticalBonusDiceHint": "An additional number of dice that should be rolled on a critical hit. This field respects roll data, but not dice rolls.",
    "CriticalBonusDiceLabel": "Extra Critical Hit Dice",
    "DamageTypeHint": "The damage type of the parts added to the damage roll.",
    "DamageTypeLabel": "Damage Type",
    "Label": "Damage Rolls"
  },
  "TypeHitdie": {
    "BonusHint": "Additional parts to add on top of the hit die roll.",
    "BonusLabel": "Hit Die Roll Bonus",
    "Label": "Hit Die Rolls"
  },
  "TypeSave": {
    "BonusHint": "An integer to add onto the DC of a saving throw. This field respects roll data, but not dice rolls.",
    "BonusLabel": "Save DC Bonus",
    "Label": "Save DCs"
  },
  "TypeTest": {
    "BonusHint": "Additional parts to add on top of the ability check.",
    "BonusLabel": "Ability Check Bonus",
    "Label": "Ability Checks"
  },
  "TypeThrow": {
    "BonusHint": "Additional parts to add on top of the saving throw roll.",
    "BonusLabel": "Saving Throw Bonus",
    "DeathSaveCriticalHint": "An integer to subtract from the threshold that decides when a Death Saving Throw results in restoring consciousness and 1 hit point. This field respects roll data, but not dice rolls.",
    "DeathSaveCriticalLabel": "Death Save Critical Limit",
    "Label": "Saving Throws",
    "TargetValueHint": "An integer to subtract from the minimum requirement to pass a saving throw. This field respects roll data, but not dice rolls.",
    "TargetValueLabel": "Target Value"
  },
  "Warning": {
    "Consuming": {
      "CurrencyUnavailable": "You do not have the required amount of that denomination.",
      "EffectUnavailable": "The associated effect no longer exists.",
      "HealthUnavailable": "You do not have enough hit points remaining.",
      "HitdiceUnavailable": "You do not have enough hit dice remaining.",
      "InspirationUnavailable": "You do not have inspiration.",
      "QuantityUnavailable": "You do not have the required quantity of the associated item.",
      "SlotsUnavailable": "You do not have any remaining spell slots of that level.",
      "UsesUnavailable": "You do not have the required number of charges on the item."
    }
  }
}}
