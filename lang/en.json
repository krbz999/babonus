{"BABONUS": {
  "AvailableFiltersTooltip": "The list of filters you can apply to this bonus, further narrowing down which rolls it should apply to. Each filter must be true for the bonus to apply.",
  "Babonus": "Babonus",
  "BasicBonuses": "Basic Bonuses",
  "BonusCopy": "{name} (Copy)",
  "ConfigurationConsumptionConsume": "Consume:",
  "ConfigurationCopyTooltip": "Create a duplicate of this bonus",
  "ConfigurationEditTooltip": "Edit this bonus",
  "ConsumptionOption": "({value}) of {max} {label}",
  "ContextMenu": {
    "Delete": "Delete",
    "Disable": "Disable",
    "Duplicate": "Duplicate",
    "Edit": "Edit",
    "Enable": "Enable"
  },
  "Create": "Create New Bonus",
  "CurrentBonuses": "Current Bonuses",
  "CurrentBonusesTooltip": "The bonuses you have created that are currently stored on this Actor, Item, or ActiveEffect.",
  "CurrentFiltersTooltip": "The filters currently applied to the bonus, further narrowing down which rolls it should apply to. Each filter must be true for the bonus to apply.",
  "Example": "Example",
  "Fields": {
    "Aura": {
      "Blockers": {
        "Hint": "The status conditions that block an aura from being transferred, such as a paladin's aura that is only active while the paladin is neither dead nor unconscious.",
        "Label": "Blocking Conditions"
      },
      "Disposition": {
        "Hint": "Which targets should be affected by this aura, relative to the disposition of the origin token.",
        "Label": "Valid Targets",
        "OptionAlly": "Allied Targets",
        "OptionAny": "Any Targets",
        "OptionEnemy": "Enemy Targets"
      },
      "Enabled": {
        "Hint": "Configure whether and how the bonus acts as an aura.",
        "Label": "Enable"
      },
      "Label": "Aura Configuration",
      "Range": {
        "Hint": "The range of the aura, measured in feet (put in '-1' for an unlimited range).",
        "Label": "Range",
        "LabelFt": "Range ({range} ft)",
        "LabelUnlimited": "Range ({range})"
      },
      "RequireLight": {
        "Hint": "If checked, the aura will be restricted by anything that blocks light.",
        "Label": "Enforce Light Restrictions"
      },
      "RequireMove": {
        "Hint": "If checked, the aura will be restricted by anything that blocks movement.",
        "Label": "Enforce Move Restrictions"
      },
      "RequireSight": {
        "Hint": "If checked, the aura will be restricted by anything that blocks vision.",
        "Label": "Enforce Sight Restrictions"
      },
      "RequireSound": {
        "Hint": "If checked, the aura will be restricted by anything that blocks sound.",
        "Label": "Enforce Sound Restrictions"
      },
      "Self": {
        "Hint": "Whether the aura should affect its owner regardless of any other targeting behavior.",
        "Label": "Affect Self"
      },
      "Template": {
        "Hint": "If the aura affects the area within a Measured Template instead of having a range (for items that are able to place a template).",
        "Label": "Applies to Template"
      }
    },
    "Consume": {
      "Enabled": {
        "Hint": "Configure whether and how the bonus consumes a property. A bonus cannot be set to consume unless it is optional.",
        "Label": "Enable"
      },
      "Formula": {
        "Hint": "The formula by which the bonus scales at each step.",
        "Label": "Scaling Formula"
      },
      "Label": "Consumption Configuration",
      "Scales": {
        "Hint": "Decide whether this bonus can consume more than the base amount of the consumed property and scale its bonus accordingly.",
        "Label": "Enable Scaling"
      },
      "Subtype": {
        "CurrencyLabel": "Denomination",
        "HitdiceLabel": "Hit Die Size"
      },
      "Type": {
        "Label": "Consumption Type",
        "OptionEffect": "Active Effect",
        "OptionSlots": "Spell Slot"
      },
      "Values": {
        "Hint": "The amount that will be consumed when opting into this bonus.",
        "HintScale": "The minimum and maximum amounts that can be consumed when opting into this bonus.",
        "HintScaleSlot": "The minimum and maximum sizes of a spell slot to opt into this bonus. If a spell slot greater than this maximum is consumed, it grants no additional benefit.",
        "HintSlot": "The minimum size of a spell slot required to opt into this bonus.",
        "Label": "Consumed Values",
        "LabelSlot": "Spell Slot Size",
        "Max": "Maximum",
        "MaxSlot": "Largest",
        "Min": "Minimum",
        "MinSlot": "Smallest"
      },
      "ValueStep": {
        "Hint": "The delta, or step, of the choices when consuming.",
        "Label": "Step"
      }
    },
    "Enabled": {
      "Hint": "Toggle this bonus on or off. A bonus that is toggled off will be completely ignored.",
      "Label": "Enabled"
    },
    "Exclusive": {
      "Hint": "Toggle whether this bonus applies only to the item on which it is created. A bonus cannot be set to apply to one specific item only, unless created on said item, and applying to attack, damage, save DCs, or tool checks.",
      "Label": "Exclusive"
    },
    "Optional": {
      "Hint": "Toggle whether this bonus should be opted into when rolling. A bonus cannot be set to be optional unless it provides an additive bonus on top of an attack roll, damage roll, saving throw, or ability check.",
      "Label": "Optional"
    },
    "Reminder": {
      "Hint": "Toggle whether this bonus simply serves as a reminder. To use this, it must not be granting any bonuses or dice modifications. This feature is also only available for rolls that have a configuration dialog.",
      "Label": "Reminder"
    }
  },
  "Filters": {
    "Abilities": {
      "Hint": "The ability score used for the roll. This respects items set to use defaults, such as spells using the spellcasting ability, or finesse weapons using either Strength or Dexterity.",
      "Label": "Ability Modifier"
    },
    "ActorCreatureSizes": {
      "Hint": "The size this creature must be one of.",
      "Label": "Creature Sizes"
    },
    "ActorCreatureTypes": {
      "Hint": "The type of creature the rolling actor must be one of (or have as a subtype), or the type of creature the rolling actor must not be one of. For example 'undead', 'fey', or 'construct'.",
      "Label": "Actor Creature Types"
    },
    "ActorLanguages": {
      "Hint": "The languages the actor must be able to speak one of, or none of.",
      "Label": "Spoken Languages"
    },
    "ArbitraryComparisons": {
      "Hint": "Insert numbers, roll data properties, strings, or a combination of the three, that must be in a specific relationship for the bonus to apply. This comparison can evaluate substrings by using either of the inequalities. You can also use roll data from a targeted token's actor by prepending with '@target'.",
      "Label": "Arbitrary Comparisons",
      "One": "Value…",
      "Other": "Other value…"
    },
    "AttackTypes": {
      "Hint": "The type of attack roll the item must have for the bonus to apply. For example if you cast a spell that must involve a ranged spell attack (rsak) or melee weapon attack (mwak).",
      "Label": "Attack Types"
    },
    "BaseArmors": {
      "Hint": "The type of armor you must be wearing one of or must be wearing none of for the bonus to apply, including shields.",
      "Label": "Armor Types"
    },
    "BaseTools": {
      "Hint": "The types of tools the item must be one of or none of for the bonus to apply. For example Herbalism Kit, Thieves' Tools, or Cobbler's Tools.",
      "Label": "Tool Types"
    },
    "BaseWeapons": {
      "Hint": "The types of weapons the item must be one of or none of for the bonus to apply. For example Battleaxe, Shortbow, or Longsword.",
      "Label": "Weapon Types"
    },
    "CreatureTypes": {
      "Hint": "The type of creature the target actor must be one of (or have as a subtype), or the type of creature the target must not be one of. For example 'undead', 'fey', or 'construct'.",
      "Label": "Target Creature Types"
    },
    "CustomScripts": {
      "Hint": "Any custom script you want to write yourself. The script has to be completely synchronous and must return true or false. As helper variables, the script is supplied with 'token', 'actor', 'item', and 'bonus', if applicable.",
      "Label": "Custom Script"
    },
    "DamageTypes": {
      "Hint": "The type of damage the item must deal for the bonus to apply or must not deal for the bonus to apply. For example if a spell deals fire damage.",
      "Label": "Damage Types"
    },
    "FeatureTypes": {
      "Hint": "The type and subtype a feature-type item must be. For example a class feature, ki feature, or monster feature.",
      "Label": "Feature Types",
      "SubtypeLabel": "Subtype",
      "TypeLabel": "Type"
    },
    "HealthPercentages": {
      "Hint": "The percentage of health the actor must at least have, or at most have, for the bonus to apply.",
      "Label": "Health Percentage",
      "OptionLess": "Less Than",
      "OptionMore": "More Than",
      "TypeLabel": "Type",
      "ValueLabel": "Threshold"
    },
    "ItemTypes": {
      "Hint": "The types of items the bonus should apply to. For example if the item should only apply to spells or only to weapons.",
      "Label": "Item Types"
    },
    "PreparationModes": {
      "Hint": "The type of preparation mode the spell must be set to for the bonus to apply, such as 'pact' for pact magic, or 'at will'.",
      "Label": "Preparation Modes"
    },
    "ProficiencyLevels": {
      "Hint": "The level of proficiency that the actor must have with the roll made.",
      "Label": "Proficiency Levels"
    },
    "RemainingSpellSlots": {
      "Hint": "The minimum and maximum total number of remaining spell slots the actor must have for the bonus to apply. For example if you want a bonus to apply only if you have 3 spell slots or more remaining, or no spell slots remaining at all.",
      "Label": "Remaining Spell Slots",
      "RangesLabel": "Range",
      "SizeHint": "Take the size of the spell slot into account, meaning a spell slot of 5th level counts as a value of five. Otherwise, each spell slots count as one.",
      "SizeLabel": "Size"
    },
    "SaveAbilities": {
      "Hint": "The ability that must be used to set the saving throw DC of the item for the bonus to apply; for example a Battle Master fighter who determines their Maneuver DC with Dexterity. This can be different from the ability the item otherwise uses. If an item is set to scale with 'Spellcasting', the actor's spellcasting ability is compared against.",
      "Label": "Save DC Abilities"
    },
    "SkillIds": {
      "Hint": "The types of skills the roll must be one of or none of for the bonus to apply. For example Athletics, Nature, or Survival.",
      "Label": "Skills"
    },
    "SpellComponents": {
      "Hint": "The components or spell tags the spell must have for the bonus to apply. You can choose whether the spell must have all of the given components or tags, or at least one of them. For example if you want a bonus to apply to all spells that require concentration.",
      "Label": "Spell Components",
      "MatchAll": "Match all",
      "MatchAny": "Match any",
      "MatchLabel": "Matching",
      "TypesLabel": "Types"
    },
    "SpellLevels": {
      "Hint": "The level at which the spell must be cast for the bonus to apply. You can select each level individually. For example, you can have a bonus apply only to cantrips, only to leveled spells, or only to spells of 3rd level or below.",
      "Label": "Spell Levels"
    },
    "SpellSchools": {
      "Hint": "The school the spell must belong to for the bonus to apply. If multiple schools are selected, the spell must belong to any one of them. For example, if you want a bonus to apply only to Divination spells.",
      "Label": "Spell Schools"
    },
    "StatusEffects": {
      "Hint": "The conditions the actor must be affected by or must not be affected by, using the effect's set of statuses.",
      "Label": "Actor Conditions"
    },
    "TargetEffects": {
      "Hint": "The conditions the target actor must be affected by or must not be affected by, using the effect's set of statuses.",
      "Label": "Target Conditions"
    },
    "ThrowTypes": {
      "Hint": "The type of saving throw the bonus should apply to. This also applies to death saving throws, and you can adjust the target value of death saves as well.",
      "Label": "Saving Throw Types"
    },
    "TokenSizes": {
      "Hint": "The size of the targeted token, and whether to compare against the rolling token as well. If checked, the target must be at least or at most as big as the roller.",
      "Label": "Token Sizes",
      "RangeLabel": "Size",
      "SelfHint": "If checked, the target token must be larger/smaller than the rolling actor's token size in addition to the above value.",
      "SelfLabel": "Compare to self",
      "SizeGreaterThan": "Greater than",
      "SizePlaceholder": "Size…",
      "SizeSmallerThan": "Smaller than"
    },
    "WeaponProperties": {
      "Hint": "The weapon properties the item either must have or cannot have for the bonus to apply. If any are selected, the weapon must have at least one of the included properties, and none of the excluded properties. For example if you want a bonus to apply only to Two-Handed weapons.",
      "Label": "Weapon Properties"
    }
  },
  "ID": "ID",
  "Keys": "Keys",
  "KeysDialogApplySelection": "Apply Selection",
  "KeysDialogExclude": "Exclude",
  "KeysDialogInclude": "Include",
  "KeysDialogState": "State",
  "KeysDialogTitle": "Keys: {name}",
  "KeysDialogValue": "Value",
  "Labels": {
    "Consuming": "Consuming",
    "Disabled": "Disabled",
    "Exclusive": "Item Only",
    "Filters": "{n} Filters",
    "Optional": "Optional",
    "Reminder": "Reminder",
    "TemplateAura": "Template Aura",
    "TokenAura": "Token Aura"
  },
  "Largest": "Largest",
  "Modifiers": {
    "Amount": {
      "EnabledHint": "Allow this bonus to make changes to the amount of dice rolled.",
      "EnabledLabel": "Enable",
      "Label": "Dice Amount",
      "ModeHint": "Whether to add the additional dice on top or multiply the value by this amount.",
      "ModeLabel": "Mode",
      "ValueHint": "The increase to the amount of dice rolled.",
      "ValueLabel": "Additional Dice"
    },
    "Config": {
      "FirstHint": "If checked, the die modifiers only apply to the first die in the full expression.",
      "FirstLabel": "First Die Only",
      "Label": "Dice Configuration"
    },
    "Explode": {
      "EnabledHint": "Allow this bonus to cause the dice to explode.",
      "EnabledLabel": "Enable",
      "Label": "Exploding Dice",
      "LimitHint": "The maximum amount of explosions allowed. If left blank, there will not be any limit enforced.",
      "LimitLabel": "Maximum Explosions",
      "OnceHint": "Limit the dice to explode at most once.",
      "OnceLabel": "Explode Once",
      "ValueHint": "The threshold for the explosive behaviour.",
      "ValueLabel": "Threshold"
    },
    "Maximum": {
      "EnabledHint": "Allow this bonus to configure the maximum result rolled on each die.",
      "EnabledLabel": "Enable",
      "Label": "Maximum Results",
      "ValueHint": "The maximum result able to be rolled. By using negative values, the ceiling will be calculated from the top rather than the bottom.",
      "ValueLabel": "Maximum Value",
      "ZeroHint": "Allow 0 as a final value. Otherwise the minimum result allowed will be 1.",
      "ZeroLabel": "Allow Zero"
    },
    "Minimum": {
      "EnabledHint": "Allow this bonus to configure the minimum result rolled on each die.",
      "EnabledLabel": "Enable",
      "Label": "Minimum Results",
      "MaximizeHint": "Cause all dice to be maximized.",
      "MaximizeLabel": "Maximize",
      "ValueHint": "The minimum result able to be rolled. By using negative values, the floor will be calculated from the top rather than the bottom.",
      "ValueLabel": "Minimum Value"
    },
    "Modes": {
      "ChoiceAdd": "Add",
      "ChoiceMultiply": "Multiply"
    },
    "Reroll": {
      "EnabledHint": "Allow this bonus to cause the dice to reroll.",
      "EnabledLabel": "Enable",
      "InvertHint": "Whether to reroll dice that roll above the threshold instead of below the threshold.",
      "InvertLabel": "Inverted",
      "Label": "Rerolling Dice",
      "LimitHint": "The maximum amount of rerolls allowed if recursive. If left blank, there will not be any limit enforced.",
      "LimitLabel": "Maximum Rerolls",
      "RecursiveHint": "Whether to reroll the dice recursively.",
      "RecursiveLabel": "Recursive",
      "ValueHint": "The threshold for the reroll behaviour.",
      "ValueLabel": "Threshold"
    },
    "Size": {
      "EnabledHint": "Allow this bonus to make changes to the size of dice rolled.",
      "EnabledLabel": "Enable",
      "Label": "Dice Size",
      "ModeHint": "Whether to increase the dice sizes by the amount or multiply the faces.",
      "ModeLabel": "Mode",
      "ValueHint": "The increase to the size of the dice rolled.",
      "ValueLabel": "Size Increase"
    }
  },
  "ModuleTitle": "Build-a-Bonus",
  "NewBabonus": "New Babonus",
  "OriginName": "Origin: {name}",
  "OverviewActor": "Actor",
  "OverviewCopied": "The uuid has been copied to clipboard.",
  "OverviewImmediateParent": "Immediate Parent",
  "OverviewName": "Name",
  "OverviewTitle": "Applied Bonuses",
  "RegionConfigHint": "Open the builder for bonuses on this scene region. These will apply to any token contained within the region.",
  "Relative": "Relative",
  "SearchBonuses": "Search Bonuses",
  "SelectType": "Select a Type",
  "SelectTypeTooltip": "Select a type for your new bonus; the kind of roll to which it should apply.",
  "SettingsAllowFumbleNegationHint": "Allow for modifiers to the fumble range on attack rolls to go below 1?",
  "SettingsAllowFumbleNegationName": "Allow Fumble Negation",
  "SettingsDisableCustomScriptFilterHint": "Disable the 'Custom Script' filters from having their values read. Instead the filter always immediately returns true. Enable this setting if you prefer other users not executing scripts.",
  "SettingsDisableCustomScriptFilterName": "Disable 'Custom Script' filter.",
  "SettingsDisplayLabelHint": "If checked, the label is displayed in the header of applicable actors, items, and effects.",
  "SettingsDisplayLabelName": "Display Label",
  "SettingsPadAuraRadius": "Pad Aura Radius",
  "SettingsPadAuraRadiusHint": "On gridless scenes, extend the radius of auras due to token size?",
  "SettingsShowAuraRangesHint": "Create a visual indicator for the ranges of babonus auras. This does not apply to template auras or auras with unlimited ranges. If the roller is within an aura, it is marked green, otherwise red.",
  "SettingsShowAuraRangesName": "Show Aura Ranges",
  "SettingsShowBuilderForPlayersHint": "If disabled, the icon to enter the builder will not be available in the header for players.",
  "SettingsShowBuilderForPlayersName": "Show for Players",
  "SettingsShowSheetTab": "Character Sheet Tab",
  "SettingsShowSheetTabHint": "Add a new tab on the character sheet rather than adding a header button.",
  "SheetTabs": {
    "Advanced": "Advanced",
    "Bonuses": "Bonuses",
    "Configuration": "Configuration",
    "Description": "Description",
    "Filters": "Filters"
  },
  "ToggleBonus": "Toggle Bonus",
  "Toggles": "Toggles",
  "TypeAttack": {
    "BonusHint": "Additional parts to add on top of the attack roll.",
    "BonusLabel": "Attack Roll Bonus",
    "CriticalRangeHint": "An integer to subtract from the critical range of the attack roll. This field respects roll data, but not dice rolls.",
    "CriticalRangeLabel": "Critical Range Modifier",
    "FumbleRangeHint": "An integer to add to the fumble range of the attack roll. This field respects roll data, but not dice rolls.",
    "FumbleRangeLabel": "Fumble Range Modifier",
    "Label": "Attack Rolls"
  },
  "TypeDamage": {
    "BonusHint": "Additional parts to add on top of the damage roll.",
    "BonusLabel": "Damage Roll Bonus",
    "CriticalBonusDamageHint": "Additional parts to add on top of the damage roll on critical hits.",
    "CriticalBonusDamageLabel": "Extra Critical Hit Damage",
    "CriticalBonusDiceHint": "An additional number of dice that should be rolled on a critical hit. This field respects roll data, but not dice rolls.",
    "CriticalBonusDiceLabel": "Extra Critical Hit Dice",
    "DamageTypeHint": "The damage type of the parts added to the damage roll.",
    "DamageTypeLabel": "Damage Type",
    "Label": "Damage Rolls"
  },
  "TypeHitdie": {
    "BonusHint": "Additional parts to add on top of the hit die roll.",
    "BonusLabel": "Hit Die Roll Bonus",
    "Label": "Hit Die Rolls"
  },
  "TypeSave": {
    "BonusHint": "An integer to add onto the DC of a saving throw. This field respects roll data, but not dice rolls.",
    "BonusLabel": "Save DC Bonus",
    "Label": "Save DCs"
  },
  "TypeTest": {
    "BonusHint": "Additional parts to add on top of the ability check.",
    "BonusLabel": "Ability Check Bonus",
    "Label": "Ability Checks"
  },
  "TypeThrow": {
    "BonusHint": "Additional parts to add on top of the saving throw roll.",
    "BonusLabel": "Saving Throw Bonus",
    "DeathSaveCriticalHint": "An integer to subtract from the threshold that decides when a Death Saving Throw results in restoring consciousness and 1 hit point. This field respects roll data, but not dice rolls.",
    "DeathSaveCriticalLabel": "Death Save Critical Limit",
    "Label": "Saving Throws",
    "TargetValueHint": "An integer to subtract from the minimum requirement to pass a saving throw. This field respects roll data, but not dice rolls.",
    "TargetValueLabel": "Target Value"
  },
  "Warning": {
    "Consuming": {
      "CurrencyUnavailable": "You do not have the required amount of that denomination.",
      "EffectUnavailable": "The associated effect no longer exists.",
      "HealthUnavailable": "You do not have enough hit points remaining.",
      "HitdiceUnavailable": "You do not have enough hit dice remaining.",
      "InspirationUnavailable": "You do not have inspiration.",
      "QuantityUnavailable": "You do not have the required quantity of the associated item.",
      "SlotsUnavailable": "You do not have any remaining spell slots of that level.",
      "UsesUnavailable": "You do not have the required number of charges on the item."
    }
  }
}}
